---
- hosts: localhost
  become: no 
  gather_facts: yes
  tasks:
  - name:
    debug:
      msg: "{{lookup('ini','REMOTEUSER section=Appconfig file=.env')}}"
  - name: "Create folder for docker file on NOT Windows!"
    file:
      path: /opt/dockerfiles/file-proxy-service
      recurse: yes
      owner: ansible
      group: ansible
    when: ansible_facts['os_family'] != 'Windows'
  - name: "Create folder for docker file on Windows"
    win_file:
      path: C:\dockerfiles\file-proxy-service
      state: directory
    when: ansible_facts['os_family'] == 'Windows'
  - name: "Copy Dockerfile to destination NOT Windows"
    copy:
      src: Dockerfile
      dest: /opt/dockerfiles/file-proxy-service/Dockerfile
      owner: ansible
      group: ansible
    when: ansible_facts['os_family'] != 'Windows'
  - name: "Copy Dockerfile to destination Windows"
    win_copy:
      src: Dockerfile
      dest: C:\dockerfiles\file-proxy-service\Dockerfile
    when: ansible_facts['os_family'] == 'Windows'
  - name: "Copy .env to destination on NOT Windows."
    copy:
      src: .env
      dest: /opt/dockerfiles/file-proxy-service/.env
      owner: ansible
      group: ansible
    when: ansible_facts['os_family'] != 'Windows'
  - name: "Copy .env to destination on Windows!"
    win_copy:
      src: .env
      dest: C:\dockerfiles\file-proxy-service\.env      
    when: ansible_facts['os_family'] == 'Windows'
  - name: "Copy requirements.txt to destination on NOT Windows"
    copy: 
      src: requirements.txt
      dest: /opt/dockerfiles/file-proxy-service/requirements.txt
      owner: ansible
      group: ansible
    when: ansible_facts['os_family'] != 'Windows'
  - name: "Copy requirements.txt to destination  on Windows"
    win_copy: 
      src: requirements.txt
      dest: C:\dockerfiles\file-proxy-service\requirements.txt      
    when: ansible_facts['os_family'] == 'Windows'
  - name: "Copy App.py to the destination on NOT Windows!"
    copy:
      src: App.py
      dest: /opt/dockerfiles/file-proxy-service/App.py
      owner: ansible
      group: ansible
    when: ansible_facts['os_family'] != 'Windows'
  - name: "Copy App.py to the destination on Windows!"
    win_copy:
      src: App.py
      dest: C:\dockerfiles\file-proxy-service\App.py
    when: ansible_facts['os_family'] == 'Windows'
  - name: "Build image on NOT Windows"
    docker_image:
      name: file-proxy-service
      build:
        path: /opt/dockerfiles/file-proxy-service
        pull: true
      force_source: true
      source: build
    register: buildresult
    when: ansible_facts['os_family'] != 'Windows'
  - name: "Results of the build..."
    debug:
      msg: "{{buildresult}}"    
  - name: "Build image on Windows"
    win_command: docker build -t file-proxy-service .
    args:
      chdir: C:\dockerfiles\file-proxy-service\
    register: buildresult
    when: ansible_facts['os_family'] == 'Windows'
  - name: "Results of the build..."
    debug:
      msg: "{{buildresult}}"
  - name: "Run container on NOT Windows"
    docker_container:
      name: file-proxy-service
      image: file-proxy-service
      state: started
      restart: yes
      volumes:
        - "{{lookup('ini','IN section=Appconfig file=.env')}}:/mnt/in"        
        #- "{{lookup('ini','OUT section=Appconfig file=.env')}}:/mnt/out"
      ports:
        - "8080:8080"
    register: runresult
    when: ansible_facts['os_family'] != 'Windows'
  - name: "Results of the start"
    debug:
      msg: "{{runresult}}"    
  - name: "Run container on Windows!"
    win_command: docker run -v  -p 8080:8080 -d file-proxy-service
    register: runresult
    when: ansible_facts['os_family'] == 'Windows'
  - name: "Results of the start"
    debug:
      msg: "{{runresult}}"
  